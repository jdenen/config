#+TITLE: Emacs <> Elixir
#+STARTUP: inlineimages nofold

Literate configuration for my MacOS development environment.
+ [[https://ohmyz.sh][Oh My Zsh]]
+ Git with GPG signing
+ [[https://elixir-lang.org][Elixir]], Erlang, NodeJS, and [[https://postgres.app][Postgres]]
+ [[https://github.com/hlissner/doom-emacs][Doom]] Emacs using [[https://github.com/elixir-lsp/elixir-ls][ElixirLS]]

* Table of Contents :TOC_3:noexport:
- [[#macos][MacOS]]
  - [[#package-management][Package management]]
  - [[#window-management][Window management]]
  - [[#fonts][Fonts]]
  - [[#terminal][Terminal]]
- [[#git][Git]]
  - [[#gitconfig][gitconfig]]
  - [[#gitignore][gitignore]]
  - [[#gpg][gpg]]
- [[#asdf-vm][asdf-vm]]
  - [[#erlang][Erlang]]
  - [[#elixir][Elixir]]
  - [[#nodejs][NodeJS]]
  - [[#direnv][direnv]]
- [[#doom][Doom]]
  - [[#emacs][Emacs]]
  - [[#elixirls][ElixirLS]]
- [[#oh-my-zsh][Oh My Zsh]]
  - [[#antigen][antigen]]

* MacOS
** Package management
I use [[https://brew.sh][Homebrew]].

#+BEGIN_SRC sh :export none :eval query :results silent
/usr/bin/env bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
#+END_SRC
** Window management
[[https://github.com/ianyh/Amethyst][Amethyst]] is a tiling window manager for MacOS.

#+BEGIN_SRC sh :export none :eval query :results silent
brew cask install amethyst
#+END_SRC
** Fonts
#+BEGIN_SRC sh :export none :eval query :results silent
brew cask install font-hasklig font-source-code-pro
#+END_SRC
** Terminal
#+BEGIN_SRC sh :export none :eval query :results silent
brew cask install iterm2
#+END_SRC

And some CLI tools:
#+BEGIN_SRC sh :export none :eval query :results silent
brew install cmake fd gnutls ripgrep sd
#+END_SRC
* Git
Make life with Git easier by installing:

+ Newer version of Git
+ Emacs friendly pinentry application
+ [[https://pre-commit.com/][pre-commit]] for managing Git hooks

#+BEGIN_SRC sh :export none :eval query :results silent
brew install git gpg pinentry-mac pre-commit
#+END_SRC

** gitconfig
#+BEGIN_SRC conf :tangle ~/.gitconfig
[user]
name = Johnson Denen
email = johnson.denen@gmail.com

[alias]
log = log --graph

[color]
ui = true

[diff]
renames = true

[fetch]
prune = true

[pull]
rebase = true

[commit]
gpgsign = true

[push]
default = simple
ff = false

[rerere]
enabled = true

[core]
excludesfile = ~/.gitignore
#+END_SRC
** gitignore
#+BEGIN_SRC conf :tangle ~/.gitignore
.DS_Store
.elixir_ls/
todo.org
#+END_SRC
** gpg
#+BEGIN_SRC sh :export none :eval query :results silent
key=$(gpg --list-secret-keys --keyid-format LONG | grep -e "^sec" | cut -d'/' -f2 | cut -d' ' -f1)
git config --global user.signingkey $key
#+END_SRC

#+BEGIN_SRC conf :export ~/.gnupg/gpg-agent.conf
pinentry-program /usr/local/bin/pinentry-mac
#+END_SRC
* asdf-vm
I use [[https://asdf-vm.com][asdf]] to manage programming languages and their versions.

#+BEGIN_SRC sh :export none :eval query :results silent
git clone https://github.com/asdf-vm/asdf ~/.asdf --branch v0.7.8
#+END_SRC
** Erlang
Need build tools. Want observer support (wxWidgets).
#+BEGIN_SRC sh :export none :eval query :results silent
brew install autoconf wxmac
#+END_SRC

#+BEGIN_SRC sh :export none :eval query :results silent
default_version=23.0.2

asdf plugin install erlang
KERL_BUILD_DOCS=yes asdf install erlang "$default_version"
asdf global erlang "$default_version"
#+END_SRC
** Elixir
#+BEGIN_SRC sh :export none :eval query :results silent
default_version=1.10.3-otp-23

asdf plugin add elixir
asdf install elixir "$default_version"
asdf global elixir "$default_version"

mix do local.hex --force, local.rebar --force
#+END_SRC
** NodeJS
#+BEGIN_SRC sh :export none :eval query :results silent
default_version=11.15.0

asdf plugin add nodejs
bash -c '${ASDF_DATA_DIR:=$HOME/.asdf}/plugins/nodejs/bin/import-release-team-keyring'
asdf install nodejs "${default_version}"
asdf global nodejs "${default_version}"
#+END_SRC
** direnv
#+BEGIN_SRC sh :export none :eval query :results silent
asdf plugin add direnv
asdf install direnv "${default_version}"
asdf global direnv "${default_version}"
#+END_SRC
* Doom
Install =doom-emacs= once.
#+BEGIN_SRC sh :export none :eval query :results silent
git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom install
#+END_SRC

Doom configuration lives in [[file:doom.org][doom.org]]. Run this every time you
make a change:

#+BEGIN_SRC sh :export none :eval query :results silent
~/.emacs.d/bin/org-tangle doom.org
~/.emacs.d/bin/doom sync
#+END_SRC
** Emacs
Install with JSON support (==--with-jansson==) for better LSP integration.

#+BEGIN_SRC sh :export none :eval query :results silent
brew tap d12frosted/emacs-plus
brew install emacs-plus@27 --with-no-titlebar --with-modern-sexy-v2-icon --with-jansson
#+END_SRC
** ElixirLS
Pin to =v0.5.0= for now.
#+BEGIN_SRC sh :export none :eval query :results silent
git clone https://github.com/elixir-lsp/elixir-ls ~/.elixirls --branch v0.5.0
#+END_SRC

Release to =~/.elixirls/release=, which is in =PATH=.
#+BEGIN_SRC sh :export none :eval query :results silent
mix do deps.get, compile, elixir_ls.release -o release
#+END_SRC
* Oh My Zsh
#+BEGIN_SRC sh :tangle ~/.zshrc :eval no
source ~/antigen.zsh
antigen use oh-my-zsh

antigen bundle asdf
antigen bundle docker
antigen bundle emacs
antigen bundle git
antigen bundle osx
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search
antigen bundle zsh-users/zsh-completions

antigen theme bureau

antigen apply

eval "$(direnv hook zsh)"

alias ls='ls -aFG'

export PATH="${PATH}:${HOME}/Code/bin:${HOME}/.elixirls/release"
#+END_SRC

** antigen
#+BEGIN_SRC sh :export none :eval query :results silent
curl -L git.io/antigen > ~/antigen.zsh
#+END_SRC
